/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Coord;
import java.io.IOException;

/**
 * AccessPoint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class AccessPoint {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("coord")
  private Coord coord = null;

  @SerializedName("access_point_code")
  private String accessPointCode = null;

  /**
   * Gets or Sets embeddedType
   */
  @JsonAdapter(EmbeddedTypeEnum.Adapter.class)
  public enum EmbeddedTypeEnum {
    PT_ACCESS_POINT("pt_access_point"),

    POI_ACCESS_POINT("poi_access_point");

    private String value;

    EmbeddedTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EmbeddedTypeEnum fromValue(String text) {
      for (EmbeddedTypeEnum b : EmbeddedTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EmbeddedTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EmbeddedTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EmbeddedTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EmbeddedTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("embedded_type")
  private EmbeddedTypeEnum embeddedType = null;

  public AccessPoint id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the object
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Identifier of the object")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AccessPoint name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the object
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AccessPoint coord(Coord coord) {
    this.coord = coord;
    return this;
  }

   /**
   * Get coord
   * @return coord
  **/
  @ApiModelProperty(value = "")
  public Coord getCoord() {
    return coord;
  }

  public void setCoord(Coord coord) {
    this.coord = coord;
  }

  public AccessPoint accessPointCode(String accessPointCode) {
    this.accessPointCode = accessPointCode;
    return this;
  }

   /**
   * Get accessPointCode
   * @return accessPointCode
  **/
  @ApiModelProperty(value = "")
  public String getAccessPointCode() {
    return accessPointCode;
  }

  public void setAccessPointCode(String accessPointCode) {
    this.accessPointCode = accessPointCode;
  }

  public AccessPoint embeddedType(EmbeddedTypeEnum embeddedType) {
    this.embeddedType = embeddedType;
    return this;
  }

   /**
   * Get embeddedType
   * @return embeddedType
  **/
  @ApiModelProperty(required = true, value = "")
  public EmbeddedTypeEnum getEmbeddedType() {
    return embeddedType;
  }

  public void setEmbeddedType(EmbeddedTypeEnum embeddedType) {
    this.embeddedType = embeddedType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessPoint accessPoint = (AccessPoint) o;
    return Objects.equals(this.id, accessPoint.id) &&
        Objects.equals(this.name, accessPoint.name) &&
        Objects.equals(this.coord, accessPoint.coord) &&
        Objects.equals(this.accessPointCode, accessPoint.accessPointCode) &&
        Objects.equals(this.embeddedType, accessPoint.embeddedType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, coord, accessPointCode, embeddedType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessPoint {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    coord: ").append(toIndentedString(coord)).append("\n");
    sb.append("    accessPointCode: ").append(toIndentedString(accessPointCode)).append("\n");
    sb.append("    embeddedType: ").append(toIndentedString(embeddedType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

