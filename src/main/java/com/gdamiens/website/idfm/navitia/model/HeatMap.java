/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.HeatMatrixSchema;
import io.swagger.client.model.Place;
import java.io.IOException;

/**
 * HeatMap
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class HeatMap {
  @SerializedName("heat_matrix")
  private HeatMatrixSchema heatMatrix = null;

  @SerializedName("from")
  private Place from = null;

  @SerializedName("to")
  private Place to = null;

  @SerializedName("requested_date_time")
  private String requestedDateTime = null;

  public HeatMap heatMatrix(HeatMatrixSchema heatMatrix) {
    this.heatMatrix = heatMatrix;
    return this;
  }

   /**
   * Get heatMatrix
   * @return heatMatrix
  **/
  @ApiModelProperty(value = "")
  public HeatMatrixSchema getHeatMatrix() {
    return heatMatrix;
  }

  public void setHeatMatrix(HeatMatrixSchema heatMatrix) {
    this.heatMatrix = heatMatrix;
  }

  public HeatMap from(Place from) {
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @ApiModelProperty(value = "")
  public Place getFrom() {
    return from;
  }

  public void setFrom(Place from) {
    this.from = from;
  }

  public HeatMap to(Place to) {
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @ApiModelProperty(value = "")
  public Place getTo() {
    return to;
  }

  public void setTo(Place to) {
    this.to = to;
  }

  public HeatMap requestedDateTime(String requestedDateTime) {
    this.requestedDateTime = requestedDateTime;
    return this;
  }

   /**
   * Get requestedDateTime
   * @return requestedDateTime
  **/
  @ApiModelProperty(value = "")
  public String getRequestedDateTime() {
    return requestedDateTime;
  }

  public void setRequestedDateTime(String requestedDateTime) {
    this.requestedDateTime = requestedDateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HeatMap heatMap = (HeatMap) o;
    return Objects.equals(this.heatMatrix, heatMap.heatMatrix) &&
        Objects.equals(this.from, heatMap.from) &&
        Objects.equals(this.to, heatMap.to) &&
        Objects.equals(this.requestedDateTime, heatMap.requestedDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(heatMatrix, from, to, requestedDateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HeatMap {\n");

    sb.append("    heatMatrix: ").append(toIndentedString(heatMatrix)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    requestedDateTime: ").append(toIndentedString(requestedDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

