/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BetaEndpoints;
import io.swagger.client.model.ObstaclesObstacles;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Obstacles
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class Obstacles {
  @SerializedName("obstacles")
  private List<ObstaclesObstacles> obstacles = new ArrayList<ObstaclesObstacles>();

  @SerializedName("pagination")
  private Object pagination = null;

  @SerializedName("warnings")
  private List<BetaEndpoints> warnings = new ArrayList<BetaEndpoints>();

  public Obstacles obstacles(List<ObstaclesObstacles> obstacles) {
    this.obstacles = obstacles;
    return this;
  }

  public Obstacles addObstaclesItem(ObstaclesObstacles obstaclesItem) {
    this.obstacles.add(obstaclesItem);
    return this;
  }

   /**
   * Get obstacles
   * @return obstacles
  **/
  @ApiModelProperty(required = true, value = "")
  public List<ObstaclesObstacles> getObstacles() {
    return obstacles;
  }

  public void setObstacles(List<ObstaclesObstacles> obstacles) {
    this.obstacles = obstacles;
  }

  public Obstacles pagination(Object pagination) {
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @ApiModelProperty(required = true, value = "")
  public Object getPagination() {
    return pagination;
  }

  public void setPagination(Object pagination) {
    this.pagination = pagination;
  }

  public Obstacles warnings(List<BetaEndpoints> warnings) {
    this.warnings = warnings;
    return this;
  }

  public Obstacles addWarningsItem(BetaEndpoints warningsItem) {
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * Get warnings
   * @return warnings
  **/
  @ApiModelProperty(required = true, value = "")
  public List<BetaEndpoints> getWarnings() {
    return warnings;
  }

  public void setWarnings(List<BetaEndpoints> warnings) {
    this.warnings = warnings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Obstacles obstacles = (Obstacles) o;
    return Objects.equals(this.obstacles, obstacles.obstacles) &&
        Objects.equals(this.pagination, obstacles.pagination) &&
        Objects.equals(this.warnings, obstacles.warnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(obstacles, pagination, warnings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Obstacles {\n");

    sb.append("    obstacles: ").append(toIndentedString(obstacles)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

