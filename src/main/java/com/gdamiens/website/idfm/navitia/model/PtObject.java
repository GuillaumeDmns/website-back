/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CommercialMode;
import io.swagger.client.model.Line;
import io.swagger.client.model.Network;
import io.swagger.client.model.Poi;
import io.swagger.client.model.Route;
import io.swagger.client.model.StopArea;
import io.swagger.client.model.StopPoint;
import io.swagger.client.model.Trip;
import java.io.IOException;

/**
 * PtObject
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class PtObject {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("quality")
  private Integer quality = null;

  @SerializedName("stop_area")
  private StopArea stopArea = null;

  @SerializedName("stop_point")
  private StopPoint stopPoint = null;

  @SerializedName("poi")
  private Poi poi = null;

  @SerializedName("line")
  private Line line = null;

  @SerializedName("network")
  private Network network = null;

  @SerializedName("route")
  private Route route = null;

  @SerializedName("commercial_mode")
  private CommercialMode commercialMode = null;

  @SerializedName("trip")
  private Trip trip = null;

  /**
   * Gets or Sets embeddedType
   */
  @JsonAdapter(EmbeddedTypeEnum.Adapter.class)
  public enum EmbeddedTypeEnum {
    LINE("line"),

    JOURNEY_PATTERN("journey_pattern"),

    VEHICLE_JOURNEY("vehicle_journey"),

    STOP_POINT("stop_point"),

    STOP_AREA("stop_area"),

    NETWORK("network"),

    PHYSICAL_MODE("physical_mode"),

    COMMERCIAL_MODE("commercial_mode"),

    CONNECTION("connection"),

    JOURNEY_PATTERN_POINT("journey_pattern_point"),

    COMPANY("company"),

    ROUTE("route"),

    POI("poi"),

    CONTRIBUTOR("contributor"),

    ADDRESS("address"),

    POITYPE("poitype"),

    ADMINISTRATIVE_REGION("administrative_region"),

    CALENDAR("calendar"),

    LINE_GROUP("line_group"),

    IMPACT("impact"),

    DATASET("dataset"),

    TRIP("trip"),

    ACCESS_POINT("access_point");

    private String value;

    EmbeddedTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EmbeddedTypeEnum fromValue(String text) {
      for (EmbeddedTypeEnum b : EmbeddedTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EmbeddedTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EmbeddedTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EmbeddedTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EmbeddedTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("embedded_type")
  private EmbeddedTypeEnum embeddedType = null;

  public PtObject id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the object
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Identifier of the object")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PtObject name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the object
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PtObject quality(Integer quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Get quality
   * @return quality
  **/
  @ApiModelProperty(value = "")
  public Integer getQuality() {
    return quality;
  }

  public void setQuality(Integer quality) {
    this.quality = quality;
  }

  public PtObject stopArea(StopArea stopArea) {
    this.stopArea = stopArea;
    return this;
  }

   /**
   * Get stopArea
   * @return stopArea
  **/
  @ApiModelProperty(value = "")
  public StopArea getStopArea() {
    return stopArea;
  }

  public void setStopArea(StopArea stopArea) {
    this.stopArea = stopArea;
  }

  public PtObject stopPoint(StopPoint stopPoint) {
    this.stopPoint = stopPoint;
    return this;
  }

   /**
   * Get stopPoint
   * @return stopPoint
  **/
  @ApiModelProperty(value = "")
  public StopPoint getStopPoint() {
    return stopPoint;
  }

  public void setStopPoint(StopPoint stopPoint) {
    this.stopPoint = stopPoint;
  }

  public PtObject poi(Poi poi) {
    this.poi = poi;
    return this;
  }

   /**
   * Get poi
   * @return poi
  **/
  @ApiModelProperty(value = "")
  public Poi getPoi() {
    return poi;
  }

  public void setPoi(Poi poi) {
    this.poi = poi;
  }

  public PtObject line(Line line) {
    this.line = line;
    return this;
  }

   /**
   * Get line
   * @return line
  **/
  @ApiModelProperty(value = "")
  public Line getLine() {
    return line;
  }

  public void setLine(Line line) {
    this.line = line;
  }

  public PtObject network(Network network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(value = "")
  public Network getNetwork() {
    return network;
  }

  public void setNetwork(Network network) {
    this.network = network;
  }

  public PtObject route(Route route) {
    this.route = route;
    return this;
  }

   /**
   * Get route
   * @return route
  **/
  @ApiModelProperty(value = "")
  public Route getRoute() {
    return route;
  }

  public void setRoute(Route route) {
    this.route = route;
  }

  public PtObject commercialMode(CommercialMode commercialMode) {
    this.commercialMode = commercialMode;
    return this;
  }

   /**
   * Get commercialMode
   * @return commercialMode
  **/
  @ApiModelProperty(value = "")
  public CommercialMode getCommercialMode() {
    return commercialMode;
  }

  public void setCommercialMode(CommercialMode commercialMode) {
    this.commercialMode = commercialMode;
  }

  public PtObject trip(Trip trip) {
    this.trip = trip;
    return this;
  }

   /**
   * Get trip
   * @return trip
  **/
  @ApiModelProperty(value = "")
  public Trip getTrip() {
    return trip;
  }

  public void setTrip(Trip trip) {
    this.trip = trip;
  }

  public PtObject embeddedType(EmbeddedTypeEnum embeddedType) {
    this.embeddedType = embeddedType;
    return this;
  }

   /**
   * Get embeddedType
   * @return embeddedType
  **/
  @ApiModelProperty(required = true, value = "")
  public EmbeddedTypeEnum getEmbeddedType() {
    return embeddedType;
  }

  public void setEmbeddedType(EmbeddedTypeEnum embeddedType) {
    this.embeddedType = embeddedType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtObject ptObject = (PtObject) o;
    return Objects.equals(this.id, ptObject.id) &&
        Objects.equals(this.name, ptObject.name) &&
        Objects.equals(this.quality, ptObject.quality) &&
        Objects.equals(this.stopArea, ptObject.stopArea) &&
        Objects.equals(this.stopPoint, ptObject.stopPoint) &&
        Objects.equals(this.poi, ptObject.poi) &&
        Objects.equals(this.line, ptObject.line) &&
        Objects.equals(this.network, ptObject.network) &&
        Objects.equals(this.route, ptObject.route) &&
        Objects.equals(this.commercialMode, ptObject.commercialMode) &&
        Objects.equals(this.trip, ptObject.trip) &&
        Objects.equals(this.embeddedType, ptObject.embeddedType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, quality, stopArea, stopPoint, poi, line, network, route, commercialMode, trip, embeddedType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtObject {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    stopArea: ").append(toIndentedString(stopArea)).append("\n");
    sb.append("    stopPoint: ").append(toIndentedString(stopPoint)).append("\n");
    sb.append("    poi: ").append(toIndentedString(poi)).append("\n");
    sb.append("    line: ").append(toIndentedString(line)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    route: ").append(toIndentedString(route)).append("\n");
    sb.append("    commercialMode: ").append(toIndentedString(commercialMode)).append("\n");
    sb.append("    trip: ").append(toIndentedString(trip)).append("\n");
    sb.append("    embeddedType: ").append(toIndentedString(embeddedType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

