/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LinkSchema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DateTimeType
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class DateTimeType {
  @SerializedName("date_time")
  private String dateTime = null;

  @SerializedName("base_date_time")
  private String baseDateTime = null;

  @SerializedName("additional_informations")
  private List<String> additionalInformations = new ArrayList<String>();

  @SerializedName("links")
  private List<LinkSchema> links = new ArrayList<LinkSchema>();

  @SerializedName("data_freshness")
  private String dataFreshness = null;

  @SerializedName("occupancy")
  private String occupancy = null;

  public DateTimeType dateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

   /**
   * Get dateTime
   * @return dateTime
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDateTime() {
    return dateTime;
  }

  public void setDateTime(String dateTime) {
    this.dateTime = dateTime;
  }

  public DateTimeType baseDateTime(String baseDateTime) {
    this.baseDateTime = baseDateTime;
    return this;
  }

   /**
   * Get baseDateTime
   * @return baseDateTime
  **/
  @ApiModelProperty(value = "")
  public String getBaseDateTime() {
    return baseDateTime;
  }

  public void setBaseDateTime(String baseDateTime) {
    this.baseDateTime = baseDateTime;
  }

  public DateTimeType additionalInformations(List<String> additionalInformations) {
    this.additionalInformations = additionalInformations;
    return this;
  }

  public DateTimeType addAdditionalInformationsItem(String additionalInformationsItem) {
    this.additionalInformations.add(additionalInformationsItem);
    return this;
  }

   /**
   * Get additionalInformations
   * @return additionalInformations
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getAdditionalInformations() {
    return additionalInformations;
  }

  public void setAdditionalInformations(List<String> additionalInformations) {
    this.additionalInformations = additionalInformations;
  }

  public DateTimeType links(List<LinkSchema> links) {
    this.links = links;
    return this;
  }

  public DateTimeType addLinksItem(LinkSchema linksItem) {
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(required = true, value = "")
  public List<LinkSchema> getLinks() {
    return links;
  }

  public void setLinks(List<LinkSchema> links) {
    this.links = links;
  }

  public DateTimeType dataFreshness(String dataFreshness) {
    this.dataFreshness = dataFreshness;
    return this;
  }

   /**
   * Get dataFreshness
   * @return dataFreshness
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDataFreshness() {
    return dataFreshness;
  }

  public void setDataFreshness(String dataFreshness) {
    this.dataFreshness = dataFreshness;
  }

  public DateTimeType occupancy(String occupancy) {
    this.occupancy = occupancy;
    return this;
  }

   /**
   * Get occupancy
   * @return occupancy
  **/
  @ApiModelProperty(value = "")
  public String getOccupancy() {
    return occupancy;
  }

  public void setOccupancy(String occupancy) {
    this.occupancy = occupancy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DateTimeType dateTimeType = (DateTimeType) o;
    return Objects.equals(this.dateTime, dateTimeType.dateTime) &&
        Objects.equals(this.baseDateTime, dateTimeType.baseDateTime) &&
        Objects.equals(this.additionalInformations, dateTimeType.additionalInformations) &&
        Objects.equals(this.links, dateTimeType.links) &&
        Objects.equals(this.dataFreshness, dateTimeType.dataFreshness) &&
        Objects.equals(this.occupancy, dateTimeType.occupancy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateTime, baseDateTime, additionalInformations, links, dataFreshness, occupancy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DateTimeType {\n");

    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    baseDateTime: ").append(toIndentedString(baseDateTime)).append("\n");
    sb.append("    additionalInformations: ").append(toIndentedString(additionalInformations)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    dataFreshness: ").append(toIndentedString(dataFreshness)).append("\n");
    sb.append("    occupancy: ").append(toIndentedString(occupancy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

