/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CarPark
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class CarPark {
  @SerializedName("available")
  private Integer available = null;

  @SerializedName("occupied")
  private Integer occupied = null;

  @SerializedName("available_PRM")
  private Integer availablePRM = null;

  @SerializedName("occupied_PRM")
  private Integer occupiedPRM = null;

  @SerializedName("total_places")
  private Integer totalPlaces = null;

  @SerializedName("available_ridesharing")
  private Integer availableRidesharing = null;

  @SerializedName("occupied_ridesharing")
  private Integer occupiedRidesharing = null;

  @SerializedName("available_electric_vehicle")
  private Integer availableElectricVehicle = null;

  @SerializedName("occupied_electric_vehicle")
  private Integer occupiedElectricVehicle = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("availability")
  private Boolean availability = null;

  public CarPark available(Integer available) {
    this.available = available;
    return this;
  }

   /**
   * Get available
   * @return available
  **/
  @ApiModelProperty(value = "")
  public Integer getAvailable() {
    return available;
  }

  public void setAvailable(Integer available) {
    this.available = available;
  }

  public CarPark occupied(Integer occupied) {
    this.occupied = occupied;
    return this;
  }

   /**
   * Get occupied
   * @return occupied
  **/
  @ApiModelProperty(value = "")
  public Integer getOccupied() {
    return occupied;
  }

  public void setOccupied(Integer occupied) {
    this.occupied = occupied;
  }

  public CarPark availablePRM(Integer availablePRM) {
    this.availablePRM = availablePRM;
    return this;
  }

   /**
   * Get availablePRM
   * @return availablePRM
  **/
  @ApiModelProperty(value = "")
  public Integer getAvailablePRM() {
    return availablePRM;
  }

  public void setAvailablePRM(Integer availablePRM) {
    this.availablePRM = availablePRM;
  }

  public CarPark occupiedPRM(Integer occupiedPRM) {
    this.occupiedPRM = occupiedPRM;
    return this;
  }

   /**
   * Get occupiedPRM
   * @return occupiedPRM
  **/
  @ApiModelProperty(value = "")
  public Integer getOccupiedPRM() {
    return occupiedPRM;
  }

  public void setOccupiedPRM(Integer occupiedPRM) {
    this.occupiedPRM = occupiedPRM;
  }

  public CarPark totalPlaces(Integer totalPlaces) {
    this.totalPlaces = totalPlaces;
    return this;
  }

   /**
   * Get totalPlaces
   * @return totalPlaces
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalPlaces() {
    return totalPlaces;
  }

  public void setTotalPlaces(Integer totalPlaces) {
    this.totalPlaces = totalPlaces;
  }

  public CarPark availableRidesharing(Integer availableRidesharing) {
    this.availableRidesharing = availableRidesharing;
    return this;
  }

   /**
   * Get availableRidesharing
   * @return availableRidesharing
  **/
  @ApiModelProperty(value = "")
  public Integer getAvailableRidesharing() {
    return availableRidesharing;
  }

  public void setAvailableRidesharing(Integer availableRidesharing) {
    this.availableRidesharing = availableRidesharing;
  }

  public CarPark occupiedRidesharing(Integer occupiedRidesharing) {
    this.occupiedRidesharing = occupiedRidesharing;
    return this;
  }

   /**
   * Get occupiedRidesharing
   * @return occupiedRidesharing
  **/
  @ApiModelProperty(value = "")
  public Integer getOccupiedRidesharing() {
    return occupiedRidesharing;
  }

  public void setOccupiedRidesharing(Integer occupiedRidesharing) {
    this.occupiedRidesharing = occupiedRidesharing;
  }

  public CarPark availableElectricVehicle(Integer availableElectricVehicle) {
    this.availableElectricVehicle = availableElectricVehicle;
    return this;
  }

   /**
   * Get availableElectricVehicle
   * @return availableElectricVehicle
  **/
  @ApiModelProperty(value = "")
  public Integer getAvailableElectricVehicle() {
    return availableElectricVehicle;
  }

  public void setAvailableElectricVehicle(Integer availableElectricVehicle) {
    this.availableElectricVehicle = availableElectricVehicle;
  }

  public CarPark occupiedElectricVehicle(Integer occupiedElectricVehicle) {
    this.occupiedElectricVehicle = occupiedElectricVehicle;
    return this;
  }

   /**
   * Get occupiedElectricVehicle
   * @return occupiedElectricVehicle
  **/
  @ApiModelProperty(value = "")
  public Integer getOccupiedElectricVehicle() {
    return occupiedElectricVehicle;
  }

  public void setOccupiedElectricVehicle(Integer occupiedElectricVehicle) {
    this.occupiedElectricVehicle = occupiedElectricVehicle;
  }

  public CarPark state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public CarPark availability(Boolean availability) {
    this.availability = availability;
    return this;
  }

   /**
   * Get availability
   * @return availability
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isAvailability() {
    return availability;
  }

  public void setAvailability(Boolean availability) {
    this.availability = availability;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarPark carPark = (CarPark) o;
    return Objects.equals(this.available, carPark.available) &&
        Objects.equals(this.occupied, carPark.occupied) &&
        Objects.equals(this.availablePRM, carPark.availablePRM) &&
        Objects.equals(this.occupiedPRM, carPark.occupiedPRM) &&
        Objects.equals(this.totalPlaces, carPark.totalPlaces) &&
        Objects.equals(this.availableRidesharing, carPark.availableRidesharing) &&
        Objects.equals(this.occupiedRidesharing, carPark.occupiedRidesharing) &&
        Objects.equals(this.availableElectricVehicle, carPark.availableElectricVehicle) &&
        Objects.equals(this.occupiedElectricVehicle, carPark.occupiedElectricVehicle) &&
        Objects.equals(this.state, carPark.state) &&
        Objects.equals(this.availability, carPark.availability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(available, occupied, availablePRM, occupiedPRM, totalPlaces, availableRidesharing, occupiedRidesharing, availableElectricVehicle, occupiedElectricVehicle, state, availability);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarPark {\n");

    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    occupied: ").append(toIndentedString(occupied)).append("\n");
    sb.append("    availablePRM: ").append(toIndentedString(availablePRM)).append("\n");
    sb.append("    occupiedPRM: ").append(toIndentedString(occupiedPRM)).append("\n");
    sb.append("    totalPlaces: ").append(toIndentedString(totalPlaces)).append("\n");
    sb.append("    availableRidesharing: ").append(toIndentedString(availableRidesharing)).append("\n");
    sb.append("    occupiedRidesharing: ").append(toIndentedString(occupiedRidesharing)).append("\n");
    sb.append("    availableElectricVehicle: ").append(toIndentedString(availableElectricVehicle)).append("\n");
    sb.append("    occupiedElectricVehicle: ").append(toIndentedString(occupiedElectricVehicle)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

