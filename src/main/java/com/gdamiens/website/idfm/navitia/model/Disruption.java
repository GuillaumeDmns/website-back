/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ApplicationPattern;
import io.swagger.client.model.DisruptionProperty;
import io.swagger.client.model.Impacted;
import io.swagger.client.model.Message;
import io.swagger.client.model.Period;
import io.swagger.client.model.Severity;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Disruption
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class Disruption {
  @SerializedName("id")
  private String id = null;

  @SerializedName("disruption_id")
  private String disruptionId = null;

  @SerializedName("impact_id")
  private String impactId = null;

  @SerializedName("application_periods")
  private List<Period> applicationPeriods = null;

  @SerializedName("application_patterns")
  private List<ApplicationPattern> applicationPatterns = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PAST("past"),

    ACTIVE("active"),

    FUTURE("future");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("cause")
  private String cause = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("severity")
  private Severity severity = null;

  @SerializedName("messages")
  private List<Message> messages = null;

  @SerializedName("impacted_objects")
  private List<Impacted> impactedObjects = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("disruption_uri")
  private String disruptionUri = null;

  @SerializedName("contributor")
  private String contributor = null;

  @SerializedName("properties")
  private List<DisruptionProperty> properties = null;

  public Disruption id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Disruption disruptionId(String disruptionId) {
    this.disruptionId = disruptionId;
    return this;
  }

   /**
   * Get disruptionId
   * @return disruptionId
  **/
  @ApiModelProperty(value = "")
  public String getDisruptionId() {
    return disruptionId;
  }

  public void setDisruptionId(String disruptionId) {
    this.disruptionId = disruptionId;
  }

  public Disruption impactId(String impactId) {
    this.impactId = impactId;
    return this;
  }

   /**
   * Get impactId
   * @return impactId
  **/
  @ApiModelProperty(value = "")
  public String getImpactId() {
    return impactId;
  }

  public void setImpactId(String impactId) {
    this.impactId = impactId;
  }

  public Disruption applicationPeriods(List<Period> applicationPeriods) {
    this.applicationPeriods = applicationPeriods;
    return this;
  }

  public Disruption addApplicationPeriodsItem(Period applicationPeriodsItem) {
    if (this.applicationPeriods == null) {
      this.applicationPeriods = new ArrayList<Period>();
    }
    this.applicationPeriods.add(applicationPeriodsItem);
    return this;
  }

   /**
   * Get applicationPeriods
   * @return applicationPeriods
  **/
  @ApiModelProperty(value = "")
  public List<Period> getApplicationPeriods() {
    return applicationPeriods;
  }

  public void setApplicationPeriods(List<Period> applicationPeriods) {
    this.applicationPeriods = applicationPeriods;
  }

  public Disruption applicationPatterns(List<ApplicationPattern> applicationPatterns) {
    this.applicationPatterns = applicationPatterns;
    return this;
  }

  public Disruption addApplicationPatternsItem(ApplicationPattern applicationPatternsItem) {
    if (this.applicationPatterns == null) {
      this.applicationPatterns = new ArrayList<ApplicationPattern>();
    }
    this.applicationPatterns.add(applicationPatternsItem);
    return this;
  }

   /**
   * Get applicationPatterns
   * @return applicationPatterns
  **/
  @ApiModelProperty(value = "")
  public List<ApplicationPattern> getApplicationPatterns() {
    return applicationPatterns;
  }

  public void setApplicationPatterns(List<ApplicationPattern> applicationPatterns) {
    this.applicationPatterns = applicationPatterns;
  }

  public Disruption status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Disruption updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Disruption tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Disruption addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public Disruption cause(String cause) {
    this.cause = cause;
    return this;
  }

   /**
   * Get cause
   * @return cause
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCause() {
    return cause;
  }

  public void setCause(String cause) {
    this.cause = cause;
  }

  public Disruption category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public Disruption severity(Severity severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Get severity
   * @return severity
  **/
  @ApiModelProperty(value = "")
  public Severity getSeverity() {
    return severity;
  }

  public void setSeverity(Severity severity) {
    this.severity = severity;
  }

  public Disruption messages(List<Message> messages) {
    this.messages = messages;
    return this;
  }

  public Disruption addMessagesItem(Message messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<Message>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @ApiModelProperty(value = "")
  public List<Message> getMessages() {
    return messages;
  }

  public void setMessages(List<Message> messages) {
    this.messages = messages;
  }

  public Disruption impactedObjects(List<Impacted> impactedObjects) {
    this.impactedObjects = impactedObjects;
    return this;
  }

  public Disruption addImpactedObjectsItem(Impacted impactedObjectsItem) {
    if (this.impactedObjects == null) {
      this.impactedObjects = new ArrayList<Impacted>();
    }
    this.impactedObjects.add(impactedObjectsItem);
    return this;
  }

   /**
   * Get impactedObjects
   * @return impactedObjects
  **/
  @ApiModelProperty(value = "")
  public List<Impacted> getImpactedObjects() {
    return impactedObjects;
  }

  public void setImpactedObjects(List<Impacted> impactedObjects) {
    this.impactedObjects = impactedObjects;
  }

  public Disruption uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @ApiModelProperty(value = "")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public Disruption disruptionUri(String disruptionUri) {
    this.disruptionUri = disruptionUri;
    return this;
  }

   /**
   * Get disruptionUri
   * @return disruptionUri
  **/
  @ApiModelProperty(value = "")
  public String getDisruptionUri() {
    return disruptionUri;
  }

  public void setDisruptionUri(String disruptionUri) {
    this.disruptionUri = disruptionUri;
  }

  public Disruption contributor(String contributor) {
    this.contributor = contributor;
    return this;
  }

   /**
   * Get contributor
   * @return contributor
  **/
  @ApiModelProperty(required = true, value = "")
  public String getContributor() {
    return contributor;
  }

  public void setContributor(String contributor) {
    this.contributor = contributor;
  }

  public Disruption properties(List<DisruptionProperty> properties) {
    this.properties = properties;
    return this;
  }

  public Disruption addPropertiesItem(DisruptionProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<DisruptionProperty>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public List<DisruptionProperty> getProperties() {
    return properties;
  }

  public void setProperties(List<DisruptionProperty> properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Disruption disruption = (Disruption) o;
    return Objects.equals(this.id, disruption.id) &&
        Objects.equals(this.disruptionId, disruption.disruptionId) &&
        Objects.equals(this.impactId, disruption.impactId) &&
        Objects.equals(this.applicationPeriods, disruption.applicationPeriods) &&
        Objects.equals(this.applicationPatterns, disruption.applicationPatterns) &&
        Objects.equals(this.status, disruption.status) &&
        Objects.equals(this.updatedAt, disruption.updatedAt) &&
        Objects.equals(this.tags, disruption.tags) &&
        Objects.equals(this.cause, disruption.cause) &&
        Objects.equals(this.category, disruption.category) &&
        Objects.equals(this.severity, disruption.severity) &&
        Objects.equals(this.messages, disruption.messages) &&
        Objects.equals(this.impactedObjects, disruption.impactedObjects) &&
        Objects.equals(this.uri, disruption.uri) &&
        Objects.equals(this.disruptionUri, disruption.disruptionUri) &&
        Objects.equals(this.contributor, disruption.contributor) &&
        Objects.equals(this.properties, disruption.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, disruptionId, impactId, applicationPeriods, applicationPatterns, status, updatedAt, tags, cause, category, severity, messages, impactedObjects, uri, disruptionUri, contributor, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Disruption {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    disruptionId: ").append(toIndentedString(disruptionId)).append("\n");
    sb.append("    impactId: ").append(toIndentedString(impactId)).append("\n");
    sb.append("    applicationPeriods: ").append(toIndentedString(applicationPeriods)).append("\n");
    sb.append("    applicationPatterns: ").append(toIndentedString(applicationPatterns)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    impactedObjects: ").append(toIndentedString(impactedObjects)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    disruptionUri: ").append(toIndentedString(disruptionUri)).append("\n");
    sb.append("    contributor: ").append(toIndentedString(contributor)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

