/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * BookingRule
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class BookingRule {
  @SerializedName("name")
  private String name = null;

  @SerializedName("info_url")
  private String infoUrl = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("phone_number")
  private String phoneNumber = null;

  @SerializedName("booking_url")
  private String bookingUrl = null;

  /**
   * Gets or Sets appliesOn
   */
  @JsonAdapter(AppliesOnEnum.Adapter.class)
  public enum AppliesOnEnum {
    FROM("from"),

    TO("to");

    private String value;

    AppliesOnEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AppliesOnEnum fromValue(String text) {
      for (AppliesOnEnum b : AppliesOnEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AppliesOnEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AppliesOnEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AppliesOnEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AppliesOnEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("applies_on")
  private List<AppliesOnEnum> appliesOn = null;

  public BookingRule name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BookingRule infoUrl(String infoUrl) {
    this.infoUrl = infoUrl;
    return this;
  }

   /**
   * Get infoUrl
   * @return infoUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getInfoUrl() {
    return infoUrl;
  }

  public void setInfoUrl(String infoUrl) {
    this.infoUrl = infoUrl;
  }

  public BookingRule message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public BookingRule phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public BookingRule bookingUrl(String bookingUrl) {
    this.bookingUrl = bookingUrl;
    return this;
  }

   /**
   * Get bookingUrl
   * @return bookingUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getBookingUrl() {
    return bookingUrl;
  }

  public void setBookingUrl(String bookingUrl) {
    this.bookingUrl = bookingUrl;
  }

  public BookingRule appliesOn(List<AppliesOnEnum> appliesOn) {
    this.appliesOn = appliesOn;
    return this;
  }

  public BookingRule addAppliesOnItem(AppliesOnEnum appliesOnItem) {
    if (this.appliesOn == null) {
      this.appliesOn = new ArrayList<AppliesOnEnum>();
    }
    this.appliesOn.add(appliesOnItem);
    return this;
  }

   /**
   * Get appliesOn
   * @return appliesOn
  **/
  @ApiModelProperty(value = "")
  public List<AppliesOnEnum> getAppliesOn() {
    return appliesOn;
  }

  public void setAppliesOn(List<AppliesOnEnum> appliesOn) {
    this.appliesOn = appliesOn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookingRule bookingRule = (BookingRule) o;
    return Objects.equals(this.name, bookingRule.name) &&
        Objects.equals(this.infoUrl, bookingRule.infoUrl) &&
        Objects.equals(this.message, bookingRule.message) &&
        Objects.equals(this.phoneNumber, bookingRule.phoneNumber) &&
        Objects.equals(this.bookingUrl, bookingRule.bookingUrl) &&
        Objects.equals(this.appliesOn, bookingRule.appliesOn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, infoUrl, message, phoneNumber, bookingUrl, appliesOn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookingRule {\n");

    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    infoUrl: ").append(toIndentedString(infoUrl)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    bookingUrl: ").append(toIndentedString(bookingUrl)).append("\n");
    sb.append("    appliesOn: ").append(toIndentedString(appliesOn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

