/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DynamicSpeed
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class DynamicSpeed {
  @SerializedName("base_speed")
  private Float baseSpeed = null;

  @SerializedName("traffic_speed")
  private Float trafficSpeed = null;

  @SerializedName("geojson_offset")
  private Integer geojsonOffset = null;

  public DynamicSpeed baseSpeed(Float baseSpeed) {
    this.baseSpeed = baseSpeed;
    return this;
  }

   /**
   * Get baseSpeed
   * @return baseSpeed
  **/
  @ApiModelProperty(value = "")
  public Float getBaseSpeed() {
    return baseSpeed;
  }

  public void setBaseSpeed(Float baseSpeed) {
    this.baseSpeed = baseSpeed;
  }

  public DynamicSpeed trafficSpeed(Float trafficSpeed) {
    this.trafficSpeed = trafficSpeed;
    return this;
  }

   /**
   * Get trafficSpeed
   * @return trafficSpeed
  **/
  @ApiModelProperty(value = "")
  public Float getTrafficSpeed() {
    return trafficSpeed;
  }

  public void setTrafficSpeed(Float trafficSpeed) {
    this.trafficSpeed = trafficSpeed;
  }

  public DynamicSpeed geojsonOffset(Integer geojsonOffset) {
    this.geojsonOffset = geojsonOffset;
    return this;
  }

   /**
   * Get geojsonOffset
   * @return geojsonOffset
  **/
  @ApiModelProperty(value = "")
  public Integer getGeojsonOffset() {
    return geojsonOffset;
  }

  public void setGeojsonOffset(Integer geojsonOffset) {
    this.geojsonOffset = geojsonOffset;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicSpeed dynamicSpeed = (DynamicSpeed) o;
    return Objects.equals(this.baseSpeed, dynamicSpeed.baseSpeed) &&
        Objects.equals(this.trafficSpeed, dynamicSpeed.trafficSpeed) &&
        Objects.equals(this.geojsonOffset, dynamicSpeed.geojsonOffset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseSpeed, trafficSpeed, geojsonOffset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynamicSpeed {\n");

    sb.append("    baseSpeed: ").append(toIndentedString(baseSpeed)).append("\n");
    sb.append("    trafficSpeed: ").append(toIndentedString(trafficSpeed)).append("\n");
    sb.append("    geojsonOffset: ").append(toIndentedString(geojsonOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

