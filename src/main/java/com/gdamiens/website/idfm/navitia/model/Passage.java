/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results
 *
 * OpenAPI spec version: v15.75.4
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.gdamiens.website.idfm.navitia.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LinkSchema;
import io.swagger.client.model.PassageDisplayInformation;
import io.swagger.client.model.Route;
import io.swagger.client.model.StopDateTime;
import io.swagger.client.model.StopPoint;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Passage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-01-15T18:02:06.472Z")
public class Passage {
  @SerializedName("route")
  private Route route = null;

  @SerializedName("stop_point")
  private StopPoint stopPoint = null;

  @SerializedName("stop_date_time")
  private StopDateTime stopDateTime = null;

  @SerializedName("display_informations")
  private PassageDisplayInformation displayInformations = null;

  @SerializedName("links")
  private List<LinkSchema> links = null;

  public Passage route(Route route) {
    this.route = route;
    return this;
  }

   /**
   * Get route
   * @return route
  **/
  @ApiModelProperty(value = "")
  public Route getRoute() {
    return route;
  }

  public void setRoute(Route route) {
    this.route = route;
  }

  public Passage stopPoint(StopPoint stopPoint) {
    this.stopPoint = stopPoint;
    return this;
  }

   /**
   * Get stopPoint
   * @return stopPoint
  **/
  @ApiModelProperty(value = "")
  public StopPoint getStopPoint() {
    return stopPoint;
  }

  public void setStopPoint(StopPoint stopPoint) {
    this.stopPoint = stopPoint;
  }

  public Passage stopDateTime(StopDateTime stopDateTime) {
    this.stopDateTime = stopDateTime;
    return this;
  }

   /**
   * Get stopDateTime
   * @return stopDateTime
  **/
  @ApiModelProperty(value = "")
  public StopDateTime getStopDateTime() {
    return stopDateTime;
  }

  public void setStopDateTime(StopDateTime stopDateTime) {
    this.stopDateTime = stopDateTime;
  }

  public Passage displayInformations(PassageDisplayInformation displayInformations) {
    this.displayInformations = displayInformations;
    return this;
  }

   /**
   * Get displayInformations
   * @return displayInformations
  **/
  @ApiModelProperty(value = "")
  public PassageDisplayInformation getDisplayInformations() {
    return displayInformations;
  }

  public void setDisplayInformations(PassageDisplayInformation displayInformations) {
    this.displayInformations = displayInformations;
  }

  public Passage links(List<LinkSchema> links) {
    this.links = links;
    return this;
  }

  public Passage addLinksItem(LinkSchema linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<LinkSchema>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<LinkSchema> getLinks() {
    return links;
  }

  public void setLinks(List<LinkSchema> links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Passage passage = (Passage) o;
    return Objects.equals(this.route, passage.route) &&
        Objects.equals(this.stopPoint, passage.stopPoint) &&
        Objects.equals(this.stopDateTime, passage.stopDateTime) &&
        Objects.equals(this.displayInformations, passage.displayInformations) &&
        Objects.equals(this.links, passage.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(route, stopPoint, stopDateTime, displayInformations, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Passage {\n");

    sb.append("    route: ").append(toIndentedString(route)).append("\n");
    sb.append("    stopPoint: ").append(toIndentedString(stopPoint)).append("\n");
    sb.append("    stopDateTime: ").append(toIndentedString(stopDateTime)).append("\n");
    sb.append("    displayInformations: ").append(toIndentedString(displayInformations)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

